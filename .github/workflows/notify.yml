name: Generate Release Notes

on:
  workflow_run:
    workflows: ["Build and Deploy"]  # Replace with the name of your primary workflow
    types:
      - completed
jobs:
  release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Check Workflow Status
        id: check_status
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
      
      - name: Generate Release Notes
        id: generate-notes
        run: |
          # Your release notes generation script here
          # Example: Create release-notes.txt
          echo "Release Notes for Workflow ${{ github.workflow }}:" > release-notes.txt
          echo "Status: ${{ steps.check_status.outputs.workflow_status }}" >> release-notes.txt
          echo "Date: $(date)" >> release-notes.txt
          # Add more details as needed
          cat release-notes.txt
        continue-on-error: true

      - name: Add Release Notes Comment
        if: ${{ success() }}
        run: |
          pr_number=$(jq -r ".pull_requests[0].number" "$GITHUB_EVENT_PATH")
          comment_body=$(cat release-notes.txt)
          echo "::set-output name=comment::${comment_body}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on Pull Request
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.workflow_run.workflow === 'Your Workflow Name'
              ? context.payload.workflow_run.head_commit.message.match(/#(\d+)/)[1]
              : context.issue.number;
            const commentBody = `Release Notes for Workflow ${context.workflow}:\n\n${steps.generate-notes.outputs.comment}`;

            await github.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
