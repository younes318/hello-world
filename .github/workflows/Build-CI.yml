name: Build-CI
env:
  APP_LOCATION: "/" # location of your client code
  API_LOCATION: "api" # location of your api source code - optional
  OUTPUT_LOCATION: "dist" # location of client code build output
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  
permissions:
  issues: write
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: code check
      run: |
        echo Code check 
        echo This is the task of code check
      
    - name: unit testing
      run: |
        echo Unit testing 
        echo This is the task of unit testing

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - run: npm ci
    - run: npm run build --if-present

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: .

  get-PR-number:
    name: get pull request info
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.get_pr_number.outputs.result }}
    steps:      
      - uses: actions/github-script@v6
        id: get_pr_number        
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const commitSha = github.event.commits[0].sha;
              const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha,
              owner: github.context.repo.owner,
              repo: github.context.repo.repo
                  });
              if (prs.length > 0) {
                return prs[0].number;
              } else {
                echo "There is no PR associated with the push commit";
                return "";
              }
              result-encoding: string
      - run: echo "The PR number is ${{ steps.get_pr_number.outputs.result }}"
    
  notify-build:
    name: notify build
    runs-on: ubuntu-latest
    needs: [build, get-PR-number]
    steps:
      - run: |
         curl 
          -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/younis318/hello-world/issues/${{ needs.get_pr_number.outputs.pr_number }}/comments \
          -d '{"body":"Workflow ${{ github.workflow }} (${{ github.sha }}) has completed and build finished with status ${{ job.status }}"}'
  # testing:
  #   name: Deploy to testing
  #   needs: build
  #   environment:
  #     name: testing
  #   runs-on: ubuntu-latest
  #   steps:
  #    - name: Download artifacts
  #      uses: actions/download-artifact@v2
  #      with:
  #         name: my-artifact
  #    - name: deploy
  #      uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
  #      with:
  #       skip_app_build: true
  #       azure_static_web_apps_api_token: e2100d71d8679ce534ef29252ca778b35333024f748a7f39935d648deb6f3a453-38315127-8f6b-48e5-8328-ca891d3d105700075980
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       action: "upload"
  #       app_location: ${{ env.APP_LOCATION }}
  #       api_location: ${{ env.API_LOCATION }}
  #       output_location: ${{ env.OUTPUT_LOCATION }}

  # staging:
  #   name: Deploy to staging
  #   needs: testing
  #   environment:
  #     name: staging
  #   runs-on: ubuntu-latest
  #   steps:
  #    - name: Download artifacts
  #      uses: actions/download-artifact@v2
  #      with:
  #         name: my-artifact
  #    - name: deploy
  #      uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
  #      with:
  #       skip_app_build: true
  #       azure_static_web_apps_api_token: 8376de50796f1fa63a9262bb916dc2358eb55be4544594013a981a6daab797ae3-73c428c3-4425-466f-a984-a953c97dbcc100075981 
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       action: "upload"
  #       app_location: ${{ env.APP_LOCATION }}
  #       api_location: ${{ env.API_LOCATION }}
  #       output_location: ${{ env.OUTPUT_LOCATION }}

  # production:
  #   name: Deploy to production
  #   needs: staging
  #   environment:
  #     name: production
  #   runs-on: ubuntu-latest
  #   steps:
  #    - name: Download artifacts
  #      uses: actions/download-artifact@v2
  #      with:
  #         name: my-artifact
  #    - name: deploy
  #      uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
  #      with:
  #       skip_app_build: true
  #       azure_static_web_apps_api_token: 9d2c15df1c6ee843255d95a7eaa549370aed3510dc0b717c60b9e191bc24f5253-350a4aa8-06ed-4a2b-9286-f2c43d4e953d00075982
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       action: "upload"
  #       app_location: ${{ env.APP_LOCATION }}
  #       api_location: ${{ env.API_LOCATION }}
  #       output_location: ${{ env.OUTPUT_LOCATION }}
          
    
  
